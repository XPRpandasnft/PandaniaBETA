import type { LinkTransport, LinkStorage, LinkSession, Bytes, SigningRequest } from '@proton/link';
import { type BrowserTransportOptions } from './types';
export declare class BrowserTransport implements LinkTransport {
    readonly options: BrowserTransportOptions;
    /** Package version. */
    static version: string;
    storage: LinkStorage;
    private requestStatus;
    private requestAccount;
    private walletType;
    private activeRequest?;
    private activeCancel?;
    private countdownTimer?;
    private closeTimer?;
    private showingManual;
    private Widget?;
    constructor(options?: BrowserTransportOptions);
    private closeModal;
    private setupWidget;
    private hide;
    private show;
    private showDialog;
    private displayRequest;
    showLoading(): Promise<void>;
    onRequest(request: SigningRequest, cancel: (reason: string | Error) => void): void;
    onSessionRequest(session: LinkSession, request: SigningRequest, cancel: (reason: string | Error) => void): void;
    sendSessionPayload(payload: Bytes, session: LinkSession): boolean;
    private clearTimers;
    private clearCountdown;
    private showRecovery;
    prepare(request: SigningRequest, session?: LinkSession): Promise<SigningRequest>;
    recoverError(error: Error, request: SigningRequest): boolean;
    onSuccess(request: SigningRequest): void;
    onFailure(request: SigningRequest, error: Error): void;
    userAgent(): string;
}
