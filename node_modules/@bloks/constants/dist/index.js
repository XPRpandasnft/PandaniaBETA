"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ANCHOR: () => ANCHOR,
  CLEOS: () => CLEOS,
  CLIO: () => CLIO,
  Constants: () => Constants,
  DEFAULT_CHAIN: () => DEFAULT_CHAIN,
  DEFAULT_SYMBOL: () => DEFAULT_SYMBOL,
  DEFAULT_SYSTEM_DOMAIN: () => DEFAULT_SYSTEM_DOMAIN,
  EOSAUTH: () => EOSAUTH,
  EOSC: () => EOSC,
  KEYCAT: () => KEYCAT,
  LEDGER: () => LEDGER,
  LEDGER_BLE: () => LEDGER_BLE,
  LEDGER_USB: () => LEDGER_USB,
  LEDGER_WEBHID: () => LEDGER_WEBHID,
  LEDGER_WEBUSB: () => LEDGER_WEBUSB,
  LYNX: () => LYNX,
  PROTON: () => PROTON,
  PROTON_CLI: () => PROTON_CLI,
  PROTON_WEB: () => PROTON_WEB,
  SCATTER_DESKTOP: () => SCATTER_DESKTOP,
  SCATTER_DESKTOP_MANUAL: () => SCATTER_DESKTOP_MANUAL,
  SCATTER_EXTENSION: () => SCATTER_EXTENSION,
  SIMPLEOS: () => SIMPLEOS,
  SQRL: () => SQRL,
  TREZOR: () => TREZOR,
  WAX_CLOUD_WALLET: () => WAX_CLOUD_WALLET,
  WOMBAT: () => WOMBAT,
  chainInfo: () => chainInfo,
  chainToNetworkConstantsMap: () => chainToNetworkConstantsMap,
  constants: () => constants13,
  dapps: () => dapps,
  exchanges: () => exchanges,
  getContractConstants: () => getContractConstants,
  historyTypesFeatures: () => historyTypesFeatures
});
module.exports = __toCommonJS(src_exports);

// src/defaults.ts
var DEFAULT_SYMBOL = "EOS";
var DEFAULT_SYSTEM_DOMAIN = "eosio";
var DEFAULT_CHAIN = "eos";

// src/contract.ts
var getContractConstants = (chain = DEFAULT_CHAIN, systemDomain = DEFAULT_SYSTEM_DOMAIN) => {
  let proxyInfo;
  if (["eos", "bos", "wax"].includes(chain)) {
    proxyInfo = "regproxyinfo";
  } else if (chain === "telos") {
    proxyInfo = "tlsproxyinfo";
  }
  return {
    EOSIO: systemDomain,
    EOSIO_TOKEN: !["fio", "fio-test"].includes(chain) ? `${systemDomain}.token` : "fio.token",
    ACCOUNT_INFO: "account.info",
    PROXY_INFO_ACCOUNT: proxyInfo,
    EOSIO_MSIG: `${systemDomain}.msig`,
    EOSIO_RAM: `${systemDomain}.ram`,
    EOSIO_STAKE: `${systemDomain}.stake`,
    EOSIO_PRODS: `${systemDomain}.prods`,
    EOSIO_NULL: `${systemDomain}.null`,
    EOSIO_RAMFEE: `${systemDomain}.ramfee`,
    EOSIO_VPAY: `${systemDomain}.vpay`,
    EOSIO_BPAY: `${systemDomain}.bpay`,
    EOSIO_REX: `${systemDomain}.rex`,
    NEWACCOUNT_NAME_PARAM: chain.indexOf("bos") === -1 ? "name" : "newact",
    EOSIO_MSIG_APPROVALS_TABLE: "approvals2",
    EOSIO_MSIG_PROPOSALS_TABLE: "proposal",
    TRANSFER_ACTION: "transfer",
    DELEGATE_BW_ACTION: "delegatebw",
    UNDELEGATE_BW_ACTION: "undelegatebw",
    VOTE_PRODUCER_ACTION: "voteproducer",
    BUY_RAM_ACTION: "buyram",
    BUY_RAM_BYTES_ACTION: "buyrambyes",
    SELL_RAM_ACTION: "sellram"
  };
};

// src/dapps.ts
var dapps = [
  {
    name: "Alcor.exchange",
    description: "The first self-listing DEX. With Alcor you can trade any EOS.IO tokens for system EOS tokens, atomically, without the participation of third parties! Create markets in one click, list your dapp token for one click, trade whatever you want.",
    shortDescription: "The first self-listing DEX. With Alcor you can trade any EOS.IO tokens for system EOS tokens.",
    symbol: "",
    statistics: true,
    accounts: ["eostokensdex"],
    logo: "https://i.ibb.co/dKDYDMc/vectorpaint.png",
    website: "https://alcor.exchange/",
    app: "https://alcor.exchange/",
    telegram: "https://t.me/alcorexchange",
    medium: "https://medium.com/@avral",
    twitter: "https://twitter.com/avral_pro",
    github: "https://github.com/avral/alcor-ui",
    chains: ["eos", "wax", "telos"]
  },
  {
    name: "SX",
    description: "Building secure & reliable financial blockchain instruments",
    shortDescription: "DeFi Swap & Flashloan",
    symbol: "SX",
    accounts: [
      "swap.sx",
      "vigor.sx",
      "stable.sx",
      "flash.sx",
      "push.sx",
      "network.sx",
      "registry.sx",
      "miner.sx",
      "cross.sx",
      "nav.sx",
      "fee.sx",
      "trade.sx",
      "vaults.sx",
      "proxy.sx",
      "dust.sx",
      "curve.sx"
    ],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-airdrops/master/logos/sx.png",
    website: "https://github.com/stableex",
    app: "https://xnation.io",
    telegram: "https://t.me/xnationio",
    medium: "",
    twitter: "",
    github: "https://github.com/stableex",
    chains: ["eos"]
  },
  {
    name: "EOSNameService",
    description: "EOS Name Service is the most comprehensive platform to register premium/base EOS/WAX account names.",
    shortDescription: "EOS/WAX Name Service",
    symbol: "",
    partner: false,
    accounts: ["names"],
    logo: "https://avatars1.githubusercontent.com/u/73891041",
    website: "http://eosnameservice.io",
    app: "http://eosnameservice.io",
    telegram: "https://t.me/eosnameservice",
    medium: "",
    twitter: "https://twitter.com/eosnameservice",
    github: "https://github.com/eosnameservice",
    chains: ["eos", "wax"]
  },
  {
    name: "Prospectors",
    description: "Massive Multiplayer Online Real-Time Economic Strategy Game  MINE GOLD - BUILD YOUR WORLD",
    shortDescription: "Massive Multiplayer Online Real-Time Economic Strategy Game",
    symbol: "",
    accounts: ["prospectorsc"],
    logo: "https://bloks.io/img/dapps/prospectors.png",
    website: "https://prospectors.io",
    app: "https://prospectors.io",
    telegram: "https://t.me/prospectorsgame",
    medium: "https://medium.com/@prospectorsgame",
    twitter: "https://twitter.com/prospectorsgame",
    github: "https://github.com/prospectors/public/issues",
    chains: ["eos"]
  },
  {
    name: "APPICS",
    description: "APPICS is the most engaged social media dApp that makes it easy to get rewarded with cryptocurrency for your social media activity like creating & curating content. The mobile interface is intuitive to use without any prior blockchain knowledge. Get rewarded for your passion!",
    shortDescription: "APPICS is the most engaged social media dApp - earn APX Tokens for posting, commenting, and up-voting photos & videos!",
    symbol: "APX",
    statistics: true,
    accounts: ["appicsappics"],
    logo: "https://i.imgur.com/Ts9CNN5.png",
    website: "https://appics.com",
    app: "https://appics.com",
    telegram: "https://t.me/appics_official",
    medium: "https://medium.com/@appics",
    twitter: "https://twitter.com/appics_official",
    github: "https://github.com/phenom-company/appics_eos_token",
    chains: ["eos"]
  },
  {
    name: "Boid",
    description: "Contribute your excess computing resources towards important causes while earning rewards. Join a team and rank up on the social leaderboards.",
    shortDescription: "The Social Supercomputer. Contribute your excess computing resources towards important causes.",
    symbol: "",
    accounts: ["boidcomtoken", "boidcompower", "boidcommint1", "boidcompromo"],
    logo: "https://raw.githubusercontent.com/boid-com/assets/master/boidLogo-lg.png",
    website: "https://boid.com",
    app: "https://app.boid.com",
    telegram: "https://t.me/Boidcom_official",
    medium: "https://medium.com/@boidcom",
    twitter: "https://twitter.com/boidcom",
    github: "https://github.com/boid-com",
    chains: ["eos"]
  },
  {
    name: "The Billionaire Token",
    description: "Most other coins or tokens have some sort of mining system. Billionaire Token has the exact opposite: It features a deflationary mechanism that destroys 30% of the gambled coins. Thus the tokens become more and more rare as more and more people gamble.",
    shortDescription: "Billionaire Token has the opposite of a mining system: It features a deflationary mechanism that destroys 30% of the gambled coins.",
    symbol: "XBL",
    accounts: [
      "billionairet",
      "billionraffl",
      "billionburnr",
      "billionbot11",
      "billionbot12",
      "billionbot13",
      "billionbot14"
    ],
    app: "https://BillionaireToken.com/",
    logo: "https://BillionaireToken.com/images/logo_big.png",
    website: "https://BillionaireToken.com/",
    telegram: "https://t.me/BillionaireToken",
    medium: "https://medium.com/@billionaire_3373",
    twitter: "https://twitter.com/BillionaireTkn",
    github: "https://github.com/BillionaireToken",
    chains: ["eos"]
  },
  {
    name: "Crypto Sword & Magic",
    description: "Crypto Sword & Magic is the first blockbuster RPG on EOS blockchain, traditional turn-based RPG raising heroes to challenge new dungeons. Game assets are recorded on Blockchain and transactions run on smart contracts",
    shortDescription: "Crypto Sword & Magic is the first blockbuster RPG on EOS blockchain.",
    symbol: "CSM",
    accounts: ["swordnmagicm"],
    app: "https://www.cryptoswordandmagic.com",
    logo: "https://bloks.io/img/dapps/cryptosnm.png",
    website: "https://www.cryptoswordandmagic.com",
    telegram: "https://t.me/cryptosnm_comm_en",
    medium: "https://medium.com/@cryptoswordandmagic",
    twitter: "https://twitter.com/sword_and_magic",
    github: "",
    chains: ["eos"]
  },
  {
    name: "dmail",
    description: "Welcome to dmail Beta! We are so excited to have you participate as we launch our Beta platform. In the early stages we are covering the simplest of functionality, which is sending and receiving messages. In the very near future, we will be adding a bunch of new features which we know the community is going to ask for.",
    shortDescription: "dmail is the first decentralized email on the blockchain",
    symbol: "MAIL",
    statistics: true,
    accounts: ["dmaildotcobp"],
    logo: "https://www.dmail.co/logosym_256.png",
    website: "https://dmail.co",
    app: "",
    telegram: "https://t.me/dmailcommunity",
    medium: "https://medium.com/@dmail",
    twitter: "https://twitter.com/dmaildotco",
    github: "",
    chains: ["eos", "telos"]
  },
  {
    name: "Murmur",
    description: "Murmur is a new age decentralized microblogging platform on EOS that is censorship-resistant, spam-proof and rewarding to use.",
    shortDescription: "Murmur is a new age decentralized microblogging platform on EOS that is censorship-resistant, spam-proof and rewarding to use.",
    symbol: "MUR",
    partner: true,
    accounts: ["murmurdappco", "murmurtokens", "murmurfreeac"],
    app: "https://play.google.com/store/apps/details?id=com.murmurdapp",
    logo: "https://bloks.io/img/dapps/murmur.png",
    website: "http://murmurdapp.com",
    telegram: "http://t.me/murmurdapp",
    medium: "",
    twitter: "http://twitter.com/murmurdapp",
    github: "",
    chains: ["eos"]
  },
  {
    name: "Emanate",
    description: "Emanate is EOS for the music industry. An automated, realtime music collaboration and monetisation platform.",
    shortDescription: "Emanate is decentralised technology for the future of music",
    symbol: "EMT",
    partner: true,
    accounts: ["emanateoneos", "emanateissue"],
    app: "https://emanate.live/",
    logo: "https://bloks.io/img/dapps/emanate.png",
    website: "https://emanate.live",
    telegram: "https://t.me/emanateofficial",
    medium: "",
    twitter: "https://twitter.com/emanateofficial",
    github: "",
    chains: ["eos"]
  },
  {
    name: "pixEOS",
    description: "pixEOS is the first tokenized smart economy for gamers, artists and art enthusiasts.",
    shortDescription: "pixEOS is the first tokenized smart economy for gamers, artists and art enthusiasts.",
    symbol: "PIXEOS",
    partner: true,
    accounts: ["pixeos1token", "pixeos1admin", "pixeos1start"],
    app: "https://pixeos.io",
    logo: "https://bloks.io/img/dapps/pixeos.png",
    website: "https://pixeos.io",
    telegram: "https://t.me/PIXEOS",
    medium: "",
    twitter: "https://twitter.com/eos_pix",
    github: "",
    chains: ["eos"]
  },
  {
    name: "Everipedia",
    description: "The Everipedia team plans to build a modern, convenient and decentralized new encyclopedia website, and this goal will be realized with the development of blockchain technology. The new version of Everipedia under development will be based on the EOS network, which will have features such as community autonomy, shielding preventation, and contribution incentives compared to the current version of Everipedia. Founded in 2014, the business network encyclopedia Everipedia, whose name derives from the English words Everything and Encyclopedia, is owned by Everipedia.Inc and has not yet adopted blockchain technology. As of December 2017, Everipedia is the largest English encyclopedia with more than six million entries, including all English entries of Wikipedia. Everipedias requirements for attention are more relaxed, so it has more entries than Wikipedia.",
    shortDescription: "The Everipedia team plans to build a modern, convenient and decentralized new encyclopedia.",
    symbol: "IQ",
    partner: true,
    statistics: false,
    accounts: ["everipediaiq", "eparticlectr"],
    logo: "https://bloks.io/img/dapps/everipedia.jpg",
    website: "",
    app: "https://everipedia.org",
    telegram: "https://t.me/everipedia",
    medium: "",
    twitter: "",
    github: "",
    chains: ["eos"]
  },
  {
    name: "eosDAC",
    description: "eosDAC is a Community Owned Blockproducer and a DAC enabler, born out of Dan Larimers concept of Decentralized Autonomous Communities or DACs, around which Block.one developed EOS software.  The vision of eosDAC is that EOS.IO block production should be open for everyone to contribute and benefit. To realize this vision, eosDAC is an evolving Decentralised Autonomous Community (DAC) focused on EOS.IO Block Production serving the EOS communities worldwide. In doing this, eosDAC is creating the tools and smart contracts it needs to function. It will share these with the EOS communities to help other DACs thrive on the EOS.IO blockchains.  In order to function as a DAC, eosDAC is creating open source tools and will be sharing them as a DAC Toolkit, that anyone can use, modify to setup and run a DAC.",
    shortDescription: "eosDAC is creating open source tools and will be sharing them as a DAC Toolkit to enable DACs",
    symbol: "EOSDAC",
    partner: false,
    statistics: false,
    accounts: ["eosdactokens", "eosdacserver", "eosdacthedac", "daccustodian"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/eosdac.png",
    website: "",
    app: "members.eosdac.io",
    discord: "https://discord.io/eosdac",
    telegram: "https://t.me/eosdacio",
    medium: "",
    twitter: "",
    github: "https://github.com/eosdac",
    chains: ["eos"]
  },
  {
    name: "DEOS Games",
    description: "Deos Games are casino games built on EOS blockchain. Play zero edge games with our DEOS token and participate in bankroll staking.",
    shortDescription: "Deos Games are casino games built on the EOS blockchain. Play zero edge games with DEOS token.",
    symbol: "DEOS",
    statistics: false,
    accounts: ["thedeosgames", "deosgameissu"],
    logo: "https://bloks.io/img/dapps/deosgames.png",
    website: "https://deosgames.com",
    app: "https://app.deosgames.com",
    telegram: "https://t.me/deosgameschat",
    medium: "https://medium.com/deos-games",
    twitter: "",
    github: "",
    chains: ["eos"]
  },
  {
    name: "Chintai",
    description: "Chintai is a community-owned, feeless, 100% on-chain, multisig decentralized token leasing platform where users can lend their EOS on the market to earn interest from other users to borrow who need access to CPU/NET bandwidth.",
    shortDescription: "Chintai is a community-owned, feeless, 100% on-chain, multisig decentralized token leasing platform.",
    symbol: "",
    statistics: false,
    accounts: ["chintailease", "chintaiproxy", "bidchextoken", "chexchexchex"],
    logo: "https://bloks.io/img/dapps/chintai.png",
    website: "http://chintai.io",
    app: "https://eos.chintai.io/exchange/EOS28D",
    telegram: "https://t.me/ChintaiEOS",
    medium: "https://medium.com/@ChintaiEOS",
    twitter: "https://twitter.com/chintaieos",
    github: "https://github.com/chintai-platform",
    chains: ["eos"]
  },
  {
    name: "Newdex",
    description: "Newdex is the first EOS based decentralized exchange in the world, upholding the characteristics of safe, fast and transparent, devoting to create a new-generation platform for digital assets exchange, leading the industry into an ideal new era.",
    shortDescription: "Newdex is the first EOS based decentralized exchange in the world.",
    symbol: "",
    accounts: ["newdexpocket"],
    logo: "https://bloks.io/img/dapps/newdex.png",
    website: "https://newdex.io",
    app: "https://newdex.io",
    telegram: "",
    medium: "",
    twitter: "https://twitter.com/NewdexOfficial",
    github: "",
    chains: ["eos"]
  },
  {
    name: "EOS Name Swaps",
    description: "An open-source EOS account exchange that puts the security of its users first.",
    shortDescription: "An open-source EOS account exchange that puts the security of its users first.",
    symbol: "",
    statistics: false,
    accounts: ["eosnameswaps"],
    logo: "https://bloks.io/img/dapps/eosnameswaps.png",
    website: "https://www.eosnameswaps.com/",
    app: "https://www.eosnameswaps.com/",
    telegram: "https://t.me/eosnameswaps",
    medium: "",
    twitter: "https://twitter.com/Starry3017Night",
    github: "https://github.com/StarryJapanNight/eosnameswaps",
    chains: ["eos"]
  }
];

// src/exchanges.ts
var exchanges = {
  Bithumb: {
    name: "Bithumb",
    description: "\uBE44\uD2B8\uCF54\uC778, \uC774\uB354\uB9AC\uC6C0, \uBE44\uD2B8\uCF54\uC778\uCE90\uC2DC, \uB9AC\uD50C, \uB77C\uC774\uD2B8\uCF54\uC778, \uB300\uC2DC, \uBAA8\uB124\uB85C, \uBE44\uD2B8\uCF54\uC778\uACE8\uB4DC, \uC774\uC624\uC2A4, \uC774\uB354\uB9AC\uC6C0\uD074\uB798\uC2DD, \uD000\uD140, \uC81C\uD2B8\uCE90\uC2DC, \uC2E4\uC2DC\uAC04 \uC2DC\uC138, \uC27D\uACE0 \uC548\uC804\uD55C \uAC70\uB798.",
    accounts: ["bithumbshiny"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/placeholder.png",
    website: "https://www.bithumb.com/"
  },
  OKEx: {
    name: "OKEx",
    description: "OKEx is the leading global bitcoin exchange. Secured with bank-level SSL encryption and cold storage.",
    accounts: ["okexoffiline"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/placeholder.png",
    website: "https://www.okex.com/"
  },
  Bitfinex: {
    name: "Bitfinex",
    description: "Bitfinex is a full-featured spot trading platform for major digital assets & cryptocurrencies, including Bitcoin, Ethereum, EOS, Litecoin, Ripple, NEO, Monero and many more.",
    accounts: [
      "bitfinexcw55",
      "bitfinexcw13",
      "bitfinexcw11",
      "bitfinexcw24",
      "bitfinexcw15",
      "bitfinexcw32",
      "bitfinexcw21",
      "bitfinexcw31",
      "bitfinexcw25",
      "bitfinexcw23",
      "bitfinexcw33",
      "bitfinexcw22",
      "bitfinexcw12",
      "bitfinexcw14"
    ],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/placeholder.png",
    website: "https://bitfinex.com/"
  },
  "Gate.io": {
    name: "Gate.io",
    description: "Gate.io is a bitcoin exchange platform which supports BTC, LTC, Ethereum, Qtum and more blockchain assets trading.",
    accounts: ["gateiowallet"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/placeholder.png",
    website: "https://www.gate.io/"
  },
  Kraken: {
    name: "Kraken",
    description: "Buy, sell and margin trade Bitcoin (BTC) and Etherum (ETH) in exchange with EUR, USD, CAD, GBP, and JPY.",
    accounts: ["krakenkraken"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-dapps/master/logos/placeholder.png",
    website: "https://www.kraken.com/"
  },
  Newdex: {
    name: "Newdex",
    description: "The first EOS based decentralized exchange in the world.",
    accounts: ["newdexpocket"],
    logo: "/img/exchanges/newdex.png",
    website: "https://newdex.io/",
    linkGenerator: (token, pair) => `https://newdex.io/trade/${token.account}-${pair.pair_base.toLowerCase()}-${pair.pair_quote.toLowerCase()}`
  },
  DefiBox: {
    name: "DefiBox",
    description: "One-stop DeFi application platform on EOS..",
    accounts: ["token.defi", "swap.defi"],
    logo: "https://raw.githubusercontent.com/eoscafe/eos-airdrops/master/logos/token.defi-box.png",
    website: "https://defibox.io/",
    linkGenerator: (_, __) => `https://defibox.io/`
  },
  Chaince: {
    name: "Chaince",
    description: "A Superior Blockchain Asset Trading Platform Focusing on EOS Projects",
    accounts: ["chainceoneos"],
    logo: "/img/exchanges/chaince.png",
    website: "https://chaince.com/",
    linkGenerator: (_, pair) => `https://chaince.com/trade/${pair.pair_base.toLowerCase()}${pair.pair_quote.toLowerCase()}`
  },
  Dexeos: {
    name: "Dexeos",
    description: "The World's First EOS-based Decentralized Exchange",
    accounts: ["dexeoswallet"],
    logo: "/img/exchanges/dexeos.svg",
    website: "https://dexeos.io/",
    linkGenerator: (_, pair) => `https://dexeos.io/trade/${pair.pair_base.toUpperCase()}`
  },
  Hoo: {
    name: "Hoo",
    description: "One-stop blockchain asset service platform",
    accounts: ["hoo.com"],
    logo: "/img/exchanges/hoo.jpg",
    website: "https://hoo.com/",
    linkGenerator: (_, pair) => `https://hoo.com/trade/${pair.pair_base.toLowerCase()}-${pair.pair_quote.toLowerCase()}`
  },
  Whaleex: {
    name: "Whaleex",
    description: "#1 Decentralized Exchange in the World",
    accounts: ["whaleextrust"],
    logo: "/img/exchanges/whaleex.png",
    website: "https://www.whaleex.com",
    linkGenerator: (_, pair) => `https://www.whaleex.com/trade/${pair.pair_base}_${pair.pair_quote}`
  },
  Chainrift: {
    name: "Chainrift",
    description: "A marketplace for digital currencies",
    accounts: [],
    logo: "/img/exchanges/chainrift.png",
    website: "https://www.chainrift.com/",
    linkGenerator: (_, pair) => `https://www.chainrift.com/trading?coinpair=${pair.pair_base}/${pair.pair_quote}`
  },
  Eosdaq: {
    name: "EOSDAQ",
    description: "A Standard of On-Chain DEX",
    accounts: [],
    logo: "/img/exchanges/eosdaq.png",
    website: "https://www.eosdaq.com/",
    linkGenerator: (_, pair) => `https://eosdaq.com/exchange/${pair.pair_base}_${pair.pair_quote}`
  },
  BigONE: {
    name: "BigONE",
    description: "A Standard of On-Chain DEX",
    accounts: [],
    logo: "/img/exchanges/bigONE.jpg",
    website: "https://big.one",
    linkGenerator: (_, pair) => `https://big.one/trade/${pair.pair_base}-${pair.pair_quote}`
  },
  YOLO: {
    name: "YOLO",
    description: "Instant Token Swaps on EOS",
    accounts: [],
    logo: "/img/exchanges/yolo.png",
    website: "https://yoloswap.com",
    linkGenerator: (_, pair) => `https://yoloswap.com/swap/${pair.pair_quote.toLowerCase()}-${pair.pair_base.toLowerCase()}`
  },
  Bancor: {
    name: "Bancor",
    description: "Instant Liquidity.",
    accounts: [],
    logo: "/img/exchanges/bancor.png",
    website: "https://bancor.network",
    linkGenerator: (_, pair) => `https://www.bancor.network/token/${pair.pair_base}`
  },
  Alcor: {
    name: "Alcor",
    description: "The first self-listing decentralized exchange",
    accounts: [],
    logo: "/img/exchanges/alcor.png",
    website: "https://alcor.exchange",
    linkGenerator: (_, __) => `https://www.alcor.exchange/markets`
  },
  "Defis.Network": {
    name: "Defis.Network",
    description: "An open finance network that integrates a series of DeFi protocols",
    accounts: [],
    logo: "/img/exchanges/defis-uncache.png",
    website: "https://defis.network",
    linkGenerator: (_, __) => `https://apps.defis.network/`
  },
  DolphinSwap: {
    name: "DolphinSwap",
    description: "DolphinSwap",
    accounts: [],
    logo: "/img/exchanges/dolphinswap.png",
    website: "https://dolphinswap.io/exchange",
    linkGenerator: (_, __) => "https://dolphinswap.io/exchange"
  },
  Proton: {
    name: "Metal X",
    description: "Metal X",
    accounts: [],
    logo: "/img/exchanges/metalx.png",
    website: "https://metalx.com",
    linkGenerator: (_, __) => "https://app.metalx.com"
  },
  MetalX: {
    name: "Metal X",
    description: "Metal X",
    accounts: [],
    logo: "/img/exchanges/metalx.png",
    website: "https://metalx.com",
    linkGenerator: (_, __) => "https://app.metalx.com"
  },
  Coingecko: {
    name: "CoinGecko",
    description: "CoinGecko",
    accounts: [],
    logo: "/img/exchanges/coingecko.png",
    website: "https://coingecko.com",
    linkGenerator: (_, __) => "https://coingecko.com"
  }
};

// src/providers.ts
var SCATTER_DESKTOP = "ScatterSockets";
var SCATTER_DESKTOP_MANUAL = "ScatterSocketsManual";
var SCATTER_EXTENSION = "ScatterExtension";
var LEDGER = "ledger";
var LEDGER_USB = "TransportU2F";
var LEDGER_BLE = "TransportWebBLE";
var LEDGER_WEBUSB = "TransportWebusb";
var LEDGER_WEBHID = "TransportWebHID";
var LYNX = "lynx";
var PROTON = "proton";
var PROTON_WEB = "protonweb";
var ANCHOR = "anchor";
var SIMPLEOS = "simpleos";
var EOSAUTH = "eosauth";
var CLEOS = "cleos";
var EOSC = "eosc";
var PROTON_CLI = "protoncli";
var CLIO = "clio";
var KEYCAT = "keycat";
var TREZOR = "trezor";
var SQRL = "sqrl";
var WOMBAT = "wombat";
var WAX_CLOUD_WALLET = "WaxCW";

// src/historyTypeFeatures.ts
var historyTypesFeatures = {
  native: {
    name: "native",
    actionFilter: false,
    tokenFilter: false,
    dateFilter: false,
    contractActionFilter: false,
    total: 0
  },
  dfuse: {
    name: "dfuse",
    actionFilter: true,
    tokenFilter: true,
    dateFilter: true,
    contractActionFilter: true,
    total: 4
  },
  hyperion: {
    name: "hyperion",
    actionFilter: true,
    tokenFilter: true,
    dateFilter: true,
    contractActionFilter: true,
    total: 3
  }
};

// src/chainInfo.ts
var chainInfo = {
  ["proton-test"]: {
    key: "proton-test",
    text: "XPR Network Testnet",
    value: "https://testnet.explorer.xprnetwork.org",
    image: "/img/chains/proton.png",
    testnet: true
  },
  local: {
    key: "local",
    text: "Local Testnet",
    value: "https://local.bloks.io",
    image: "/img/chains/local.png",
    testnet: true
  },
  ["wax-test"]: {
    key: "wax-test",
    text: "WAX Testnet",
    value: "https://wax-test.bloks.io",
    image: "/img/chains/wax.png",
    testnet: true
  },
  ["fio-test"]: {
    key: "fio-test",
    text: "FIO Testnet",
    value: "https://fio-test.bloks.io",
    image: "/img/chains/fio.png",
    testnet: true
  },
  jungle3: {
    key: "jungle3",
    text: "Jungle3 Testnet",
    value: "https://jungle3.bloks.io",
    image: "/img/chains/jungle.png",
    testnet: true
  },
  kylin: {
    key: "kylin",
    text: "Kylin Testnet",
    value: "https://kylin.bloks.io",
    image: "/img/chains/kylin.png",
    testnet: true
  },
  proton: {
    key: "proton",
    text: "XPR Network",
    value: "https://explorer.xprnetwork.org",
    image: "/img/chains/proton.png"
  },
  eos: {
    key: "eos",
    text: "EOS",
    value: "https://bloks.io",
    image: "/img/chains/eos.png"
  },
  wax: {
    key: "wax",
    text: "WAX",
    value: "https://wax.bloks.io",
    image: "/img/chains/wax.png"
  },
  fio: {
    key: "fio",
    text: "FIO",
    value: "https://fio.bloks.io",
    image: "/img/chains/fio.png"
  }
};

// src/common.ts
var getCommonConstants = (chain) => {
  return {
    MAX_RPC_SYNC_SECONDS_BEHIND: 20,
    IMAGE_PROXY: "https://www.api.bloks.io/image-proxy",
    WRAP_CONTRACT: "proton.wrap",
    LEND_CONTRACT: "lending.loan",
    BLOKS_API: "https://www.api.bloks.io",
    ESR_PROTOCOL: chain === "proton" ? "proton" : "proton-dev",
    METAL_PROTON_ENDPOINT: chain === "proton" ? "https://api.protonchain.com" : "https://api-dev.protonchain.com",
    SWAP_URL: chain === "proton" ? "https://otc.protonswap.com" : "https://otc-test.protonswap.com",
    WRAP_SERVER_URL: chain === "proton" ? "https://www.api.bloks.io/proton-wrap-public2" : "https://www.api.bloks.io/proton-wrap-testnet-public2"
  };
};

// src/utils.ts
var generateProviderEndpoints = (chainId, actionEndpoints) => {
  return [
    {
      chainId,
      port: 443,
      protocol: "https",
      host: actionEndpoints[0].substr(8),
      httpEndpoint: actionEndpoints[0],
      blockchain: "eos"
    }
  ];
};

// src/networks/eos.ts
var DEFAULT_ENDPOINTS = [
  "https://eos.greymass.com",
  "https://eos.eoscafeblock.com",
  "https://api.main.alohaeos.com",
  "https://api.eossweden.org"
];
var ACTIONS_ENDPOINTS = ["https://eos.greymass.com"];
var TRANSACTIONS_ENDPOINTS = [
  "https://eos.greymass.com",
  "https://api.eossweden.org"
];
var ALOHA_PROXY_URL = "https://www.alohaeos.com/vote/proxy";
var API_URL = "https://www.api.bloks.io";
var ATOMICASSETS_API = "https://eos.api.atomicassets.io";
var BLOKS_PROXY = "bloksioproxy";
var CHAIN = "eos";
var CHAIN_ID = "aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906";
var CHAIN_START_DATE = new Date("2018-06-08");
var CORE_PRECISION = 4;
var CORE_SYMBOL = "EOS";
var DISPLAY_CHAIN = "EOS";
var DOMAIN_TITLE = "EOS Bloks.io";
var HISTORY_TYPES = ["native", "hyperion"];
var HYPERION_URL = "https://eos.hyperion.eosrio.io";
var KEY_PREFIX = "EOS";
var LIGHT_API = "https://api.light.xeos.me";
var NFTS_ENABLED = true;
var PROVIDER_ENDPOINTS = generateProviderEndpoints(
  CHAIN_ID,
  ACTIONS_ENDPOINTS
);
var REX_ENABLED = true;
var SIMPLEASSETS_API = "https://eos.api.simpleassets.io";
var SUPPORTS_FREE_CPU = true;
var SUPPORTS_RENTBW = true;
var VOTING_ENABLED = true;
var constants = {
  ACTIONS_ENDPOINTS,
  ALOHA_PROXY_URL,
  API_URL,
  ATOMICASSETS_API,
  BLOKS_PROXY,
  CHAIN,
  CHAIN_ID,
  CHAIN_START_DATE,
  CORE_PRECISION,
  CORE_SYMBOL,
  DEFAULT_ENDPOINTS,
  DISPLAY_CHAIN,
  DOMAIN_TITLE,
  HISTORY_TYPES,
  HYPERION_URL,
  KEY_PREFIX,
  LIGHT_API,
  NFTS_ENABLED,
  PROVIDER_ENDPOINTS,
  REX_ENABLED,
  SIMPLEASSETS_API,
  SUPPORTS_FREE_CPU,
  SUPPORTS_RENTBW,
  TRANSACTIONS_ENDPOINTS,
  VOTING_ENABLED
};
var eos_default = constants;

// src/networks/wax.ts
var DEFAULT_ENDPOINTS2 = [
  "https://wax.greymass.com",
  "https://wax.eoscafeblock.com",
  "https://api.waxsweden.org",
  "https://chain.wax.io",
  "https://wax.eosrio.io"
];
var ACTIONS_ENDPOINTS2 = [
  "https://wax.greymass.com",
  "https://api.waxsweden.org",
  "https://wax.eosrio.io",
  "https://chain.wax.io"
];
var TRANSACTIONS_ENDPOINTS2 = [
  "https://wax.greymass.com",
  "https://api.waxsweden.org",
  "https://wax.eosrio.io",
  "https://chain.wax.io"
];
var ALOHA_PROXY_URL2 = "https://www.alohaeos.com/vote/proxy/waxmain";
var API_URL2 = "https://www.api.bloks.io/wax";
var ATOMICASSETS_API2 = "https://wax.api.atomicassets.io";
var BLOKS_PROXY2 = "bloksioproxy";
var CHAIN2 = "wax";
var CHAIN_ID2 = "1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4";
var CHAIN_START_DATE2 = new Date("2019-06-24");
var CORE_PRECISION2 = 8;
var CORE_SYMBOL2 = "WAX";
var DISPLAY_CHAIN2 = "WAX";
var DOMAIN_TITLE2 = "WAX | Bloks.io";
var HISTORY_TYPES2 = ["native", "hyperion"];
var HYPERION_URL2 = "https://wax.eosrio.io";
var KEY_PREFIX2 = "EOS";
var LIGHT_API2 = "https://wax.light-api.net";
var NFTS_ENABLED2 = true;
var PROVIDER_ENDPOINTS2 = generateProviderEndpoints(
  CHAIN_ID2,
  ACTIONS_ENDPOINTS2
);
var SIMPLEASSETS_API2 = "https://wax.api.simpleassets.io";
var VOTING_ENABLED2 = true;
var constants2 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS2,
  ALOHA_PROXY_URL: ALOHA_PROXY_URL2,
  API_URL: API_URL2,
  ATOMICASSETS_API: ATOMICASSETS_API2,
  BLOKS_PROXY: BLOKS_PROXY2,
  CHAIN: CHAIN2,
  CHAIN_ID: CHAIN_ID2,
  CHAIN_START_DATE: CHAIN_START_DATE2,
  CORE_PRECISION: CORE_PRECISION2,
  CORE_SYMBOL: CORE_SYMBOL2,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS2,
  DISPLAY_CHAIN: DISPLAY_CHAIN2,
  DOMAIN_TITLE: DOMAIN_TITLE2,
  HISTORY_TYPES: HISTORY_TYPES2,
  HYPERION_URL: HYPERION_URL2,
  KEY_PREFIX: KEY_PREFIX2,
  LIGHT_API: LIGHT_API2,
  NFTS_ENABLED: NFTS_ENABLED2,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS2,
  SIMPLEASSETS_API: SIMPLEASSETS_API2,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS2,
  VOTING_ENABLED: VOTING_ENABLED2
};
var wax_default = constants2;

// src/networks/proton.ts
var DEFAULT_ENDPOINTS3 = [
  "https://rpc.api.mainnet.metalx.com",
  "https://proton.cryptolions.io",
  "https://proton.eosusa.io"
];
var TRANSACTIONS_ENDPOINTS3 = [
  "https://proton.greymass.com",
  "https://proton.cryptolions.io"
];
var ACTIONS_ENDPOINTS3 = ["https://proton.greymass.com"];
var API_URL3 = "https://www.api.bloks.io/proton";
var ATOMICASSETS_API3 = "https://proton.api.atomicassets.io";
var CHAIN3 = "proton";
var CHAIN_ID3 = "384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0";
var CHAIN_START_DATE3 = new Date("Apr 22, 2020");
var CORE_PRECISION3 = 4;
var CORE_SYMBOL3 = "XPR";
var DISPLAY_CHAIN3 = "XPR Network";
var DOMAIN_TITLE3 = "XPR Network Explorer";
var HISTORY_TYPES3 = ["dex", "native", "hyperion"];
var HYPERION_URL3 = "https://proton.pink.gg";
var KEY_PREFIX3 = "EOS";
var LIGHT_API3 = "https://proton.light-api.net";
var MAX_VOTES = 4;
var NFTS_ENABLED3 = true;
var PROVIDER_ENDPOINTS3 = generateProviderEndpoints(
  CHAIN_ID3,
  ACTIONS_ENDPOINTS3
);
var VOTING_ENABLED3 = true;
var DEX_URL = "https://dex.api.mainnet.metalx.com";
var constants3 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS3,
  API_URL: API_URL3,
  ATOMICASSETS_API: ATOMICASSETS_API3,
  CHAIN: CHAIN3,
  CHAIN_ID: CHAIN_ID3,
  CHAIN_START_DATE: CHAIN_START_DATE3,
  CORE_PRECISION: CORE_PRECISION3,
  CORE_SYMBOL: CORE_SYMBOL3,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS3,
  DISPLAY_CHAIN: DISPLAY_CHAIN3,
  DOMAIN_TITLE: DOMAIN_TITLE3,
  HISTORY_TYPES: HISTORY_TYPES3,
  HYPERION_URL: HYPERION_URL3,
  KEY_PREFIX: KEY_PREFIX3,
  LIGHT_API: LIGHT_API3,
  MAX_VOTES,
  NFTS_ENABLED: NFTS_ENABLED3,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS3,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS3,
  VOTING_ENABLED: VOTING_ENABLED3,
  DEX_URL
};
var proton_default = constants3;

// src/networks/fio.ts
var DEFAULT_ENDPOINTS4 = [
  "https://fio.greymass.com",
  "https://fio.eossweden.org",
  "https://fio.eosusa.io"
];
var TRANSACTIONS_ENDPOINTS4 = [
  "https://fio.greymass.com",
  "https://fio.eossweden.org",
  "https://fio.eosusa.io"
];
var ACTIONS_ENDPOINTS4 = [
  "https://fio.greymass.com",
  "https://fio.eossweden.org",
  "https://fio.eosusa.io"
];
var ALOHA_PROXY_URL3 = "https://www.alohaeos.com/vote/proxy/fiomain";
var API_URL4 = "https://www.api.bloks.io/fio";
var CHAIN4 = "fio";
var CHAIN_ID4 = "21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c";
var CHAIN_START_DATE4 = new Date("Mar 24, 2020");
var CORE_PRECISION4 = 9;
var CORE_SYMBOL4 = "FIO";
var DISABLE_MEMO = true;
var DISPLAY_CHAIN4 = "FIO";
var DOMAIN_TITLE4 = "FIO Bloks.io";
var FIO_FEES_ACCOUNT = "fees@bloks";
var HISTORY_TYPES4 = ["native", "hyperion"];
var HYPERION_URL4 = "https://api.fiosweden.org";
var KEY_PREFIX4 = "FIO";
var PROVIDER_ENDPOINTS4 = generateProviderEndpoints(
  CHAIN_ID4,
  ACTIONS_ENDPOINTS4
);
var VOTING_ENABLED4 = true;
var constants4 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS4,
  ALOHA_PROXY_URL: ALOHA_PROXY_URL3,
  API_URL: API_URL4,
  CHAIN: CHAIN4,
  CHAIN_ID: CHAIN_ID4,
  CHAIN_START_DATE: CHAIN_START_DATE4,
  CORE_PRECISION: CORE_PRECISION4,
  CORE_SYMBOL: CORE_SYMBOL4,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS4,
  DISABLE_MEMO,
  DISPLAY_CHAIN: DISPLAY_CHAIN4,
  DOMAIN_TITLE: DOMAIN_TITLE4,
  FIO_FEES_ACCOUNT,
  HISTORY_TYPES: HISTORY_TYPES4,
  HYPERION_URL: HYPERION_URL4,
  KEY_PREFIX: KEY_PREFIX4,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS4,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS4,
  VOTING_ENABLED: VOTING_ENABLED4
};
var fio_default = constants4;

// src/networks/local.ts
var DEFAULT_ENDPOINTS5 = [];
var ACTIONS_ENDPOINTS5 = [];
var TRANSACTIONS_ENDPOINTS5 = [];
var API_URL5 = "";
var CHAIN5 = "local";
var CHAIN_ID5 = "";
var CHAIN_START_DATE5 = void 0;
var CORE_PRECISION5 = 4;
var CORE_SYMBOL5 = "EOS";
var DISPLAY_CHAIN5 = "Local";
var DOMAIN_TITLE5 = "Local Bloks.io";
var HISTORY_TYPES5 = ["native"];
var KEY_PREFIX5 = "EOS";
var PROVIDER_ENDPOINTS5 = [];
var VOTING_ENABLED5 = true;
var constants5 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS5,
  API_URL: API_URL5,
  CHAIN: CHAIN5,
  CHAIN_ID: CHAIN_ID5,
  CHAIN_START_DATE: CHAIN_START_DATE5,
  CORE_PRECISION: CORE_PRECISION5,
  CORE_SYMBOL: CORE_SYMBOL5,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS5,
  DISPLAY_CHAIN: DISPLAY_CHAIN5,
  DOMAIN_TITLE: DOMAIN_TITLE5,
  HISTORY_TYPES: HISTORY_TYPES5,
  KEY_PREFIX: KEY_PREFIX5,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS5,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS5,
  VOTING_ENABLED: VOTING_ENABLED5
};
var local_default = constants5;

// src/networks/jungle.ts
var DEFAULT_ENDPOINTS6 = [
  "https://api.jungle.alohaeos.com",
  "https://jungle2.cryptolions.io",
  "https://jungle.eosphere.io",
  "https://eos-jungle.eosblocksmith.io"
];
var ACTIONS_ENDPOINTS6 = ["https://jungle.eossweden.org"];
var TRANSACTIONS_ENDPOINTS6 = ["https://jungle.eossweden.org"];
var API_URL6 = "https://www.api.bloks.io/jungle";
var BLOKS_PROXY3 = "blokspartner";
var CHAIN6 = "jungle";
var CHAIN_ID6 = "e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473";
var CHAIN_START_DATE6 = new Date("Nov 23, 2018");
var CORE_PRECISION6 = 4;
var CORE_SYMBOL6 = "EOS";
var DISPLAY_CHAIN6 = "Jungle";
var DOMAIN_TITLE6 = "Jungle Bloks.io";
var HISTORY_TYPES6 = ["hyperion", "native"];
var HYPERION_URL5 = "https://jungle2.cryptolions.io";
var KEY_PREFIX6 = "EOS";
var LIGHT_API4 = "https://lightapi.eosgeneva.io";
var NFTS_ENABLED4 = true;
var PROVIDER_ENDPOINTS6 = generateProviderEndpoints(
  CHAIN_ID6,
  ACTIONS_ENDPOINTS6
);
var REX_ENABLED2 = true;
var VOTING_ENABLED6 = true;
var constants6 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS6,
  API_URL: API_URL6,
  BLOKS_PROXY: BLOKS_PROXY3,
  CHAIN: CHAIN6,
  CHAIN_ID: CHAIN_ID6,
  CHAIN_START_DATE: CHAIN_START_DATE6,
  CORE_PRECISION: CORE_PRECISION6,
  CORE_SYMBOL: CORE_SYMBOL6,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS6,
  DISPLAY_CHAIN: DISPLAY_CHAIN6,
  DOMAIN_TITLE: DOMAIN_TITLE6,
  HISTORY_TYPES: HISTORY_TYPES6,
  HYPERION_URL: HYPERION_URL5,
  KEY_PREFIX: KEY_PREFIX6,
  LIGHT_API: LIGHT_API4,
  NFTS_ENABLED: NFTS_ENABLED4,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS6,
  REX_ENABLED: REX_ENABLED2,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS6,
  VOTING_ENABLED: VOTING_ENABLED6
};
var jungle_default = constants6;

// src/networks/jungle3.ts
var DEFAULT_ENDPOINTS7 = [
  "https://jungle3.cryptolions.io",
  "https://api.jungle3.alohaeos.com",
  "https://jungle3.eosusa.io"
];
var ACTIONS_ENDPOINTS7 = [
  "https://jungle3.cryptolions.io",
  "https://jungle3.eosusa.io"
];
var TRANSACTIONS_ENDPOINTS7 = [
  "https://jungle3.cryptolions.io",
  "https://jungle3.eosusa.io"
];
var API_URL7 = "https://www.api.bloks.io/jungle3";
var CHAIN7 = "jungle3";
var CHAIN_ID7 = "2a02a0053e5a8cf73a56ba0fda11e4d92e0238a4a2aa74fccf46d5a910746840";
var CHAIN_START_DATE7 = new Date("Feb 19, 2020");
var CORE_PRECISION7 = 4;
var CORE_SYMBOL7 = "EOS";
var DISPLAY_CHAIN7 = "Jungle 3";
var DOMAIN_TITLE7 = "Jungle 3 Bloks.io";
var HISTORY_TYPES7 = ["hyperion"];
var HYPERION_URL6 = "https://jungle3.cryptolions.io";
var KEY_PREFIX7 = "EOS";
var PROVIDER_ENDPOINTS7 = generateProviderEndpoints(
  CHAIN_ID7,
  ACTIONS_ENDPOINTS7
);
var REX_ENABLED3 = true;
var SUPPORTS_RENTBW2 = true;
var VOTING_ENABLED7 = true;
var constants7 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS7,
  API_URL: API_URL7,
  CHAIN: CHAIN7,
  CHAIN_ID: CHAIN_ID7,
  CHAIN_START_DATE: CHAIN_START_DATE7,
  CORE_PRECISION: CORE_PRECISION7,
  CORE_SYMBOL: CORE_SYMBOL7,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS7,
  DISPLAY_CHAIN: DISPLAY_CHAIN7,
  DOMAIN_TITLE: DOMAIN_TITLE7,
  HISTORY_TYPES: HISTORY_TYPES7,
  HYPERION_URL: HYPERION_URL6,
  KEY_PREFIX: KEY_PREFIX7,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS7,
  REX_ENABLED: REX_ENABLED3,
  SUPPORTS_RENTBW: SUPPORTS_RENTBW2,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS7,
  VOTING_ENABLED: VOTING_ENABLED7
};
var jungle3_default = constants7;

// src/networks/kylin.ts
var DEFAULT_ENDPOINTS8 = ["https://kylin.eosn.io"];
var ACTIONS_ENDPOINTS8 = ["https://kylin.eosn.io"];
var TRANSACTIONS_ENDPOINTS8 = ["https://kylin.eosn.io"];
var API_URL8 = "https://www.api.bloks.io/kylin";
var BLOKS_PROXY4 = "blokspartner";
var CHAIN8 = "kylin";
var CHAIN_ID8 = "5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191";
var CHAIN_START_DATE8 = new Date("Jul 10, 2018");
var CORE_PRECISION8 = 4;
var CORE_SYMBOL8 = "EOS";
var DISPLAY_CHAIN8 = "Kylin";
var DOMAIN_TITLE8 = "Kylin Bloks.io";
var HISTORY_TYPES8 = ["hyperion", "native"];
var HYPERION_URL7 = "https://kylin.eosusa.io";
var KEY_PREFIX8 = "EOS";
var PROVIDER_ENDPOINTS8 = generateProviderEndpoints(
  CHAIN_ID8,
  ACTIONS_ENDPOINTS8
);
var VOTING_ENABLED8 = true;
var SUPPORTS_RENTBW3 = true;
var constants8 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS8,
  API_URL: API_URL8,
  BLOKS_PROXY: BLOKS_PROXY4,
  CHAIN: CHAIN8,
  CHAIN_ID: CHAIN_ID8,
  CHAIN_START_DATE: CHAIN_START_DATE8,
  CORE_PRECISION: CORE_PRECISION8,
  CORE_SYMBOL: CORE_SYMBOL8,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS8,
  DISPLAY_CHAIN: DISPLAY_CHAIN8,
  DOMAIN_TITLE: DOMAIN_TITLE8,
  HISTORY_TYPES: HISTORY_TYPES8,
  HYPERION_URL: HYPERION_URL7,
  KEY_PREFIX: KEY_PREFIX8,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS8,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS8,
  VOTING_ENABLED: VOTING_ENABLED8,
  SUPPORTS_RENTBW: SUPPORTS_RENTBW3
};
var kylin_default = constants8;

// src/networks/eos-test.ts
var DEFAULT_ENDPOINTS9 = ["https://www.api.bloks.io/eos-test-node"];
var ACTIONS_ENDPOINTS9 = ["https://www.api.bloks.io/eos-test-node"];
var TRANSACTIONS_ENDPOINTS9 = ["https://www.api.bloks.io/eos-test-node"];
var API_URL9 = "https://www.api.bloks.io/eos-test";
var CHAIN9 = "eos-test";
var CHAIN_ID9 = "0db13ab9b321c37c0ba8481cb4681c2788b622c3abfd1f12f0e5353d44ba6e72";
var CHAIN_START_DATE9 = new Date("2020-01-14");
var CORE_PRECISION9 = 4;
var CORE_SYMBOL9 = "TNT";
var DISPLAY_CHAIN9 = "EOSIO Test";
var DOMAIN_TITLE9 = "Bloks.io";
var HISTORY_TYPES9 = ["native"];
var KEY_PREFIX9 = "EOS";
var PROVIDER_ENDPOINTS9 = generateProviderEndpoints(
  CHAIN_ID9,
  ACTIONS_ENDPOINTS9
);
var constants9 = {
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS9,
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS9,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS9,
  API_URL: API_URL9,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS9,
  CORE_SYMBOL: CORE_SYMBOL9,
  CHAIN: CHAIN9,
  DISPLAY_CHAIN: DISPLAY_CHAIN9,
  HISTORY_TYPES: HISTORY_TYPES9,
  CHAIN_ID: CHAIN_ID9,
  DOMAIN_TITLE: DOMAIN_TITLE9,
  CHAIN_START_DATE: CHAIN_START_DATE9,
  KEY_PREFIX: KEY_PREFIX9,
  CORE_PRECISION: CORE_PRECISION9
};
var eos_test_default = constants9;

// src/networks/proton-test.ts
var DEFAULT_ENDPOINTS10 = [
  "https://rpc.api.testnet.metalx.com",
  "https://proton-testnet.eoscafeblock.com",
  "https://test.proton.eosusa.io"
];
var TRANSACTIONS_ENDPOINTS10 = DEFAULT_ENDPOINTS10;
var ACTIONS_ENDPOINTS10 = DEFAULT_ENDPOINTS10;
var API_URL10 = "https://www.api.bloks.io/proton-test";
var ATOMICASSETS_API4 = "https://test.proton.api.atomicassets.io";
var CHAIN10 = "proton-test";
var CHAIN_ID10 = "71ee83bcf52142d61019d95f9cc5427ba6a0d7ff8accd9e2088ae2abeaf3d3dd";
var CHAIN_START_DATE10 = new Date("April 3, 2020");
var CORE_PRECISION10 = 4;
var CORE_SYMBOL10 = "XPR";
var DISPLAY_CHAIN10 = "XPR Network-T";
var DOMAIN_TITLE10 = "XPR Network Testnet";
var HISTORY_TYPES10 = ["hyperion"];
var HYPERION_URL8 = "http://proton-api-testnet.eosiomadrid.io";
var KEY_PREFIX10 = "EOS";
var MAX_VOTES2 = 4;
var LIGHT_API5 = "https://testnet-lightapi.eosams.xeos.me";
var PROVIDER_ENDPOINTS10 = generateProviderEndpoints(
  CHAIN_ID10,
  ACTIONS_ENDPOINTS10
);
var VOTING_ENABLED9 = true;
var DEX_URL2 = "https://dex.api.testnet.metalx.com";
var constants10 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS10,
  API_URL: API_URL10,
  ATOMICASSETS_API: ATOMICASSETS_API4,
  CHAIN: CHAIN10,
  CHAIN_ID: CHAIN_ID10,
  CHAIN_START_DATE: CHAIN_START_DATE10,
  CORE_PRECISION: CORE_PRECISION10,
  CORE_SYMBOL: CORE_SYMBOL10,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS10,
  DISPLAY_CHAIN: DISPLAY_CHAIN10,
  DOMAIN_TITLE: DOMAIN_TITLE10,
  HISTORY_TYPES: HISTORY_TYPES10,
  HYPERION_URL: HYPERION_URL8,
  KEY_PREFIX: KEY_PREFIX10,
  MAX_VOTES: MAX_VOTES2,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS10,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS10,
  VOTING_ENABLED: VOTING_ENABLED9,
  LIGHT_API: LIGHT_API5,
  DEX_URL: DEX_URL2
};
var proton_test_default = constants10;

// src/networks/wax-test.ts
var DEFAULT_ENDPOINTS11 = [
  "https://testnet.wax.eosdetroit.io",
  "https://testnet.wax.pink.gg",
  "https://testnet.waxsweden.org"
];
var TRANSACTIONS_ENDPOINTS11 = [
  "https://testnet.wax.eosdetroit.io",
  "https://testnet.wax.pink.gg",
  "https://testnet.waxsweden.org"
];
var ACTIONS_ENDPOINTS11 = [
  "https://testnet.wax.eosdetroit.io",
  "https://testnet.wax.pink.gg",
  "https://testnet.waxsweden.org"
];
var API_URL11 = "https://www.api.bloks.io/wax-test";
var ATOMICASSETS_API5 = "https://test.wax.api.atomicassets.io";
var CHAIN11 = "wax-test";
var CHAIN_ID11 = "f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12";
var CHAIN_START_DATE11 = new Date("Dec 5, 2019");
var CORE_PRECISION11 = 8;
var CORE_SYMBOL11 = "WAX";
var DISPLAY_CHAIN11 = "WAX-T";
var DOMAIN_TITLE11 = "WAX Testnet Bloks.io";
var HISTORY_TYPES11 = ["native", "hyperion"];
var HYPERION_URL9 = "https://testnet.waxsweden.org";
var KEY_PREFIX11 = "EOS";
var LIGHT_API6 = "https://testnet-lightapi.eosams.xeos.me";
var PROVIDER_ENDPOINTS11 = generateProviderEndpoints(
  CHAIN_ID11,
  ACTIONS_ENDPOINTS11
);
var constants11 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS11,
  API_URL: API_URL11,
  ATOMICASSETS_API: ATOMICASSETS_API5,
  CHAIN: CHAIN11,
  CHAIN_ID: CHAIN_ID11,
  CHAIN_START_DATE: CHAIN_START_DATE11,
  CORE_PRECISION: CORE_PRECISION11,
  CORE_SYMBOL: CORE_SYMBOL11,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS11,
  DISPLAY_CHAIN: DISPLAY_CHAIN11,
  DOMAIN_TITLE: DOMAIN_TITLE11,
  HISTORY_TYPES: HISTORY_TYPES11,
  HYPERION_URL: HYPERION_URL9,
  KEY_PREFIX: KEY_PREFIX11,
  LIGHT_API: LIGHT_API6,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS11,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS11
};
var wax_test_default = constants11;

// src/networks/fio-test.ts
var DEFAULT_ENDPOINTS12 = [
  "https://fiotestnet.greymass.com",
  "https://test.fio.eosusa.io"
];
var TRANSACTIONS_ENDPOINTS12 = [
  "https://fiotestnet.greymass.com",
  "https://test.fio.eosusa.io"
];
var ACTIONS_ENDPOINTS12 = [
  "https://fiotestnet.greymass.com",
  "https://test.fio.eosusa.io"
];
var API_URL12 = "https://www.api.bloks.io/fio-test";
var CHAIN12 = "fio-test";
var CHAIN_ID12 = "b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e";
var CHAIN_START_DATE12 = new Date("Mar 10, 2020");
var CORE_PRECISION12 = 9;
var CORE_SYMBOL12 = "FIO";
var DISABLE_MEMO2 = true;
var DISPLAY_CHAIN12 = "FIO Test";
var DOMAIN_TITLE12 = "FIO Test Bloks.io";
var HISTORY_TYPES12 = ["native", "hyperion"];
var HYPERION_URL10 = "https://test.fio.eosusa.io";
var KEY_PREFIX12 = "FIO";
var PROVIDER_ENDPOINTS12 = generateProviderEndpoints(
  CHAIN_ID12,
  ACTIONS_ENDPOINTS12
);
var VOTING_ENABLED10 = true;
var constants12 = {
  ACTIONS_ENDPOINTS: ACTIONS_ENDPOINTS12,
  API_URL: API_URL12,
  CHAIN: CHAIN12,
  CHAIN_ID: CHAIN_ID12,
  CHAIN_START_DATE: CHAIN_START_DATE12,
  CORE_PRECISION: CORE_PRECISION12,
  CORE_SYMBOL: CORE_SYMBOL12,
  DEFAULT_ENDPOINTS: DEFAULT_ENDPOINTS12,
  DISABLE_MEMO: DISABLE_MEMO2,
  DISPLAY_CHAIN: DISPLAY_CHAIN12,
  DOMAIN_TITLE: DOMAIN_TITLE12,
  HISTORY_TYPES: HISTORY_TYPES12,
  HYPERION_URL: HYPERION_URL10,
  KEY_PREFIX: KEY_PREFIX12,
  PROVIDER_ENDPOINTS: PROVIDER_ENDPOINTS12,
  TRANSACTIONS_ENDPOINTS: TRANSACTIONS_ENDPOINTS12,
  VOTING_ENABLED: VOTING_ENABLED10
};
var fio_test_default = constants12;

// src/index.ts
var chainToNetworkConstantsMap = {
  eos: eos_default,
  wax: wax_default,
  proton: proton_default,
  local: local_default,
  jungle: jungle_default,
  jungle3: jungle3_default,
  kylin: kylin_default,
  fio: fio_default,
  ["eos-test"]: eos_test_default,
  ["proton-test"]: proton_test_default,
  ["wax-test"]: wax_test_default,
  ["fio-test"]: fio_test_default
};
var Constants = class {
  constructor() {
    if (!!Constants.instance) {
      return Constants.instance;
    }
  }
  initialize(chain) {
    if (!chain || !chainToNetworkConstantsMap[chain]) {
      chain = DEFAULT_CHAIN;
    }
    this.setNetwork(chain);
    this.setCommon(chain);
  }
  setNetwork(chain) {
    const networkConstants = chainToNetworkConstantsMap[chain];
    this.setConstants(networkConstants);
    this.setContract(chain, networkConstants.SYSTEM_DOMAIN);
  }
  setCommon(chain) {
    const commonConstants = getCommonConstants(chain);
    this.setConstants(commonConstants);
  }
  setContract(chain, systemDomain = DEFAULT_SYSTEM_DOMAIN) {
    const contractConstants = getContractConstants(chain, systemDomain);
    this.setConstants(contractConstants);
  }
  setConstants(newConstants) {
    for (const [key, value] of Object.entries(newConstants)) {
      this[key] = value;
    }
  }
};
var constants13 = new Constants();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ANCHOR,
  CLEOS,
  CLIO,
  Constants,
  DEFAULT_CHAIN,
  DEFAULT_SYMBOL,
  DEFAULT_SYSTEM_DOMAIN,
  EOSAUTH,
  EOSC,
  KEYCAT,
  LEDGER,
  LEDGER_BLE,
  LEDGER_USB,
  LEDGER_WEBHID,
  LEDGER_WEBUSB,
  LYNX,
  PROTON,
  PROTON_CLI,
  PROTON_WEB,
  SCATTER_DESKTOP,
  SCATTER_DESKTOP_MANUAL,
  SCATTER_EXTENSION,
  SIMPLEOS,
  SQRL,
  TREZOR,
  WAX_CLOUD_WALLET,
  WOMBAT,
  chainInfo,
  chainToNetworkConstantsMap,
  constants,
  dapps,
  exchanges,
  getContractConstants,
  historyTypesFeatures
});
