import { PrivateKey, PublicKey, UInt64 } from '@greymass/eosio';
import { CallbackPayload, SigningRequest } from '@proton/signing-request';
import { SealedMessage } from './link-types';
/** @internal */
export declare const fetch: typeof globalThis.fetch;
/**
 * Encrypt a message using AES and shared secret derived from given keys.
 * @internal
 */
export declare function sealMessage(message: string, privateKey: PrivateKey, publicKey: PublicKey, nonce?: UInt64): SealedMessage;
/**
 * Extract session metadata from a callback payload and request.
 * @internal
 */
export declare function sessionMetadata(payload: CallbackPayload, request: SigningRequest): Record<string, any>;
/**
 * Print a warning message to console.
 * @internal
 **/
export declare function logWarn(...args: any[]): void;
